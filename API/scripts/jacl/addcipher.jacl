# -------------------------------------------------------------------
# addcipher.jacl
# Syntaxe : addcipher.jacl <sslAlias>
# Version 1.0 01 mars 2007 By S.OUELLET
# -------------------------------------------------------------------

set sslAlias [lindex $argv 0]

global AdminConfig
global cipher_array
set cipher_attrib {}

set cipher_array(1) SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
set cipher_array(2) SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA
set cipher_array(3) SSL_DHE_DSS_WITH_DES_CBC_SHA
set cipher_array(4) SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
set cipher_array(5) SSL_DHE_RSA_WITH_DES_CBC_SHA
set cipher_array(6) SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA
set cipher_array(7) SSL_DH_anon_EXPORT_WITH_RC4_40_MD5
set cipher_array(8) SSL_DH_anon_WITH_3DES_EDE_CBC_SHA
set cipher_array(9) SSL_DH_anon_WITH_DES_CBC_SHA
set cipher_array(10) SSL_DH_anon_WITH_RC4_128_MD5
set cipher_array(11) SSL_RSA_EXPORT_WITH_DES40_CBC_SHA
set cipher_array(12) SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5
set cipher_array(13) SSL_RSA_EXPORT_WITH_RC4_40_MD5
set cipher_array(14) SSL_RSA_WITH_3DES_EDE_CBC_SHA
set cipher_array(15) SSL_RSA_WITH_DES_CBC_SHA
set cipher_array(16) SSL_RSA_WITH_NULL_MD5
set cipher_array(17) SSL_RSA_WITH_NULL_SHA
set cipher_array(18) SSL_RSA_WITH_RC4_128_MD5
set cipher_array(19) SSL_RSA_WITH_RC4_128_SHA
set cipher_array(20) SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA
set cipher_array(21) SSL_DHE_DSS_WITH_AES_128_CBC_SHA
set cipher_array(22) SSL_DHE_DSS_WITH_RC4_128_SHA
set cipher_array(23) SSL_DHE_RSA_WITH_AES_128_CBC_SHA
set cipher_array(24) SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA
set cipher_array(25) SSL_RSA_FIPS_WITH_DES_CBC_SHA
set cipher_array(26) SSL_RSA_WITH_AES_128_CBC_SHA

for {set ind 1}  {$ind < 27}  {incr ind}  {
        lappend cipher_attrib $cipher_array($ind)
}

set propertyName "com.ibm.ssl.enabledCipherSuites"
set matchFound 0
set listOfSSL [$AdminConfig list SSLConfig]
foreach sslId $listOfSSL {
	set alias [$AdminConfig showAttribute $sslId alias]
 	puts "alias=$alias sslAlias=$sslAlias"
	if {[string compare $alias $sslAlias] == 0} {
		set parentConfigId [$AdminConfig showAttribute $sslId setting]
		puts $parentConfigId
		break
	}
}
set propIds [$AdminConfig showAttribute $parentConfigId properties]
puts stdout "properties=$propIds"
foreach Id $propIds {
        set propName [$AdminConfig showAttribute $Id name]
        puts stdout "propName=$propName,propertyName=$propertyName"
        if {[string compare $propName $propertyName] == 0} {
                puts stdout "property names match"
                set matchFound 1
                break
        }
}

set customAttrib $cipher_attrib

puts stdout "cipherArray=$cipher_attrib"

set cust_attrib {}
set propName "com.ibm.ssl.enabledCipherSuites"
puts stdout "propName=$propName"
lappend cust_attrib [list name $propName]
lappend cust_attrib [list value $cipher_attrib]

if { $matchFound == 0 } {
 puts "action:add"
 catch {$AdminConfig modify $parentConfigId [list [list properties [list $cust_attrib]]]} result
 puts result
} else {
 puts "action:modify"
 catch {$AdminConfig modify $Id [list $cipher_attrib]} result
 puts result
} 

catch {$AdminConfig showall $parentConfigId} result
puts $result
catch {$AdminConfig save} result
puts $result
